{"version":3,"sources":["../../../../../src/start/server/metro/instantiateMetro.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport { MetroDevServerOptions, prependMiddleware } from '@expo/dev-server';\nimport type { LoadOptions } from '@expo/metro-config';\nimport chalk from 'chalk';\nimport http from 'http';\nimport type Metro from 'metro';\nimport { Terminal } from 'metro-core';\nimport semver from 'semver';\nimport { URL } from 'url';\n\nimport { MetroBundlerDevServer } from './MetroBundlerDevServer';\nimport { MetroTerminalReporter } from './MetroTerminalReporter';\nimport { importExpoMetroConfig } from './resolveFromProject';\nimport { getRouterDirectory } from './router';\nimport { runServer } from './runServer-fork';\nimport { withMetroMultiPlatformAsync } from './withMetroMultiPlatform';\nimport { Log } from '../../../log';\nimport { getMetroProperties } from '../../../utils/analytics/getMetroProperties';\nimport { createDebuggerTelemetryMiddleware } from '../../../utils/analytics/metroDebuggerMiddleware';\nimport { logEventAsync } from '../../../utils/analytics/rudderstackClient';\nimport { env } from '../../../utils/env';\nimport { getMetroServerRoot } from '../middleware/ManifestMiddleware';\nimport { createDevServerMiddleware } from '../middleware/createDevServerMiddleware';\nimport { ServerNext, ServerRequest, ServerResponse } from '../middleware/server.types';\nimport { getPlatformBundlers } from '../platformBundlers';\n\n// From expo/dev-server but with ability to use custom logger.\ntype MessageSocket = {\n  broadcast: (method: string, params?: Record<string, any> | undefined) => void;\n};\n\nfunction gteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver.gte(exp.sdkVersion, sdkVersion);\n  } catch {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n\nexport async function loadMetroConfigAsync(\n  projectRoot: string,\n  options: LoadOptions,\n  {\n    exp = getConfig(projectRoot, { skipSDKVersionRequirement: true, skipPlugins: true }).exp,\n    isExporting,\n  }: { exp?: ExpoConfig; isExporting: boolean }\n) {\n  let reportEvent: ((event: any) => void) | undefined;\n  const serverRoot = getMetroServerRoot(projectRoot);\n\n  const terminal = new Terminal(process.stdout);\n  const terminalReporter = new MetroTerminalReporter(serverRoot, terminal);\n\n  const reporter = {\n    update(event: any) {\n      terminalReporter.update(event);\n      if (reportEvent) {\n        reportEvent(event);\n      }\n    },\n  };\n\n  const ExpoMetroConfig = importExpoMetroConfig(projectRoot);\n  let config = await ExpoMetroConfig.loadAsync(projectRoot, { reporter, ...options });\n\n  if (\n    // Requires SDK 50 for expo-assets hashAssetPlugin change.\n    !exp.sdkVersion ||\n    gteSdkVersion(exp, '50.0.0')\n  ) {\n    // TODO: Handle asset prefix.\n    if (isExporting) {\n      // This token will be used in the asset plugin to ensure the path is correct for writing locally.\n      // @ts-expect-error: typed as readonly.\n      config.transformer.publicPath = '/assets?export_path=/assets';\n    } else {\n      // @ts-expect-error: typed as readonly\n      config.transformer.publicPath = '/assets/?unstable_path=.';\n    }\n  }\n\n  const platformBundlers = getPlatformBundlers(exp);\n\n  config = await withMetroMultiPlatformAsync(projectRoot, {\n    routerDirectory: exp.extra?.router?.unstable_src ?? getRouterDirectory(projectRoot),\n    config,\n    platformBundlers,\n    isTsconfigPathsEnabled: !!exp.experiments?.tsconfigPaths,\n    webOutput: exp.web?.output ?? 'single',\n  });\n\n  logEventAsync('metro config', getMetroProperties(projectRoot, exp, config));\n\n  return {\n    config,\n    setEventReporter: (logger: (event: any) => void) => (reportEvent = logger),\n    reporter: terminalReporter,\n  };\n}\n\n/** The most generic possible setup for Metro bundler. */\nexport async function instantiateMetroAsync(\n  metroBundler: MetroBundlerDevServer,\n  options: Omit<MetroDevServerOptions, 'logger'>,\n  { isExporting }: { isExporting: boolean }\n): Promise<{\n  metro: Metro.Server;\n  server: http.Server;\n  middleware: any;\n  messageSocket: MessageSocket;\n}> {\n  const projectRoot = metroBundler.projectRoot;\n\n  // TODO: When we bring expo/metro-config into the expo/expo repo, then we can upstream this.\n  const { exp } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n    skipPlugins: true,\n  });\n\n  const { config: metroConfig, setEventReporter } = await loadMetroConfigAsync(\n    projectRoot,\n    options,\n    { exp, isExporting }\n  );\n\n  const { middleware, websocketEndpoints, eventsSocketEndpoint, messageSocketEndpoint } =\n    createDevServerMiddleware(projectRoot, {\n      port: metroConfig.server.port,\n      watchFolders: metroConfig.watchFolders,\n    });\n\n  const customEnhanceMiddleware = metroConfig.server.enhanceMiddleware;\n  // @ts-expect-error: can't mutate readonly config\n  metroConfig.server.enhanceMiddleware = (metroMiddleware: any, server: Metro.Server) => {\n    if (customEnhanceMiddleware) {\n      metroMiddleware = customEnhanceMiddleware(metroMiddleware, server);\n    }\n    return middleware.use(metroMiddleware);\n  };\n\n  middleware.use(createDebuggerTelemetryMiddleware(projectRoot, exp));\n\n  const { server, metro } = await runServer(metroBundler, metroConfig, {\n    hmrEnabled: true,\n    // @ts-expect-error: Inconsistent `websocketEndpoints` type between metro and @react-native-community/cli-server-api\n    websocketEndpoints,\n    watch: isWatchEnabled(),\n  });\n\n  prependMiddleware(middleware, (req: ServerRequest, res: ServerResponse, next: ServerNext) => {\n    // If the URL is a Metro asset request, then we need to skip all other middleware to prevent\n    // the community CLI's serve-static from hosting `/assets/index.html` in place of all assets if it exists.\n    // /assets/?unstable_path=.\n    if (req.url) {\n      const url = new URL(req.url!, 'http://localhost:8000');\n      if (url.pathname.match(/^\\/assets\\/?/) && url.searchParams.get('unstable_path') != null) {\n        return metro.processRequest(req, res, next);\n      }\n    }\n    return next();\n  });\n\n  setEventReporter(eventsSocketEndpoint.reportEvent);\n\n  return {\n    metro,\n    server,\n    middleware,\n    messageSocket: messageSocketEndpoint,\n  };\n}\n\n/**\n * Simplify and communicate if Metro is running without watching file updates,.\n * Exposed for testing.\n */\nexport function isWatchEnabled() {\n  if (env.CI) {\n    Log.log(\n      chalk`Metro is running in CI mode, reloads are disabled. Remove {bold CI=true} to enable watch mode.`\n    );\n  }\n\n  return !env.CI;\n}\n"],"names":["loadMetroConfigAsync","instantiateMetroAsync","isWatchEnabled","gteSdkVersion","exp","sdkVersion","semver","gte","Error","projectRoot","options","getConfig","skipSDKVersionRequirement","skipPlugins","isExporting","reportEvent","serverRoot","getMetroServerRoot","terminal","Terminal","process","stdout","terminalReporter","MetroTerminalReporter","reporter","update","event","ExpoMetroConfig","importExpoMetroConfig","config","loadAsync","transformer","publicPath","platformBundlers","getPlatformBundlers","withMetroMultiPlatformAsync","routerDirectory","extra","router","unstable_src","getRouterDirectory","isTsconfigPathsEnabled","experiments","tsconfigPaths","webOutput","web","output","logEventAsync","getMetroProperties","setEventReporter","logger","metroBundler","metroConfig","middleware","websocketEndpoints","eventsSocketEndpoint","messageSocketEndpoint","createDevServerMiddleware","port","server","watchFolders","customEnhanceMiddleware","enhanceMiddleware","metroMiddleware","use","createDebuggerTelemetryMiddleware","metro","runServer","hmrEnabled","watch","prependMiddleware","req","res","next","url","URL","pathname","match","searchParams","get","processRequest","messageSocket","env","CI","Log","log","chalk"],"mappings":"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"}