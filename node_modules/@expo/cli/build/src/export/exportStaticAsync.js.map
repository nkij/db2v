{"version":3,"sources":["../../../src/export/exportStaticAsync.ts"],"sourcesContent":["/**\n * Copyright Â© 2022 650 Industries.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport path from 'path';\nimport prettyBytes from 'pretty-bytes';\nimport { inspect } from 'util';\n\nimport { getVirtualFaviconAssetsAsync } from './favicon';\nimport { Log } from '../log';\nimport { DevServerManager } from '../start/server/DevServerManager';\nimport { MetroBundlerDevServer } from '../start/server/metro/MetroBundlerDevServer';\nimport { logMetroErrorAsync } from '../start/server/metro/metroErrorInterface';\nimport { learnMore } from '../utils/link';\n\nconst debug = require('debug')('expo:export:generateStaticRoutes') as typeof console.log;\n\ntype Options = { outputDir: string; minify: boolean; includeMaps: boolean };\n\n/** @private */\nexport async function unstable_exportStaticAsync(projectRoot: string, options: Options) {\n  Log.warn(\n    `Experimental static rendering is enabled. ` +\n      learnMore('https://docs.expo.dev/router/reference/static-rendering/')\n  );\n\n  // TODO: Prevent starting the watcher.\n  const devServerManager = new DevServerManager(projectRoot, {\n    minify: options.minify,\n    mode: 'production',\n    location: {},\n  });\n  await devServerManager.startAsync([\n    {\n      type: 'metro',\n      options: {\n        location: {},\n        isExporting: true,\n      },\n    },\n  ]);\n\n  try {\n    await exportFromServerAsync(projectRoot, devServerManager, options);\n  } finally {\n    await devServerManager.stopAsync();\n  }\n}\n\n/** Match `(page)` -> `page` */\nfunction matchGroupName(name: string): string | undefined {\n  return name.match(/^\\(([^/]+?)\\)$/)?.[1];\n}\n\nexport async function getFilesToExportFromServerAsync(\n  projectRoot: string,\n  {\n    manifest,\n    renderAsync,\n  }: {\n    manifest: any;\n    renderAsync: (pathname: string) => Promise<string>;\n  }\n): Promise<Map<string, string>> {\n  // name : contents\n  const files = new Map<string, string>();\n\n  await Promise.all(\n    getHtmlFiles({ manifest }).map(async (outputPath) => {\n      const pathname = outputPath.replace(/(?:index)?\\.html$/, '');\n      try {\n        files.set(outputPath, '');\n        const data = await renderAsync(pathname);\n        files.set(outputPath, data);\n      } catch (e: any) {\n        await logMetroErrorAsync({ error: e, projectRoot });\n        throw new Error('Failed to statically export route: ' + pathname);\n      }\n    })\n  );\n\n  return files;\n}\n\n/** Perform all fs commits */\nexport async function exportFromServerAsync(\n  projectRoot: string,\n  devServerManager: DevServerManager,\n  { outputDir, minify, includeMaps }: Options\n): Promise<void> {\n  const injectFaviconTag = await getVirtualFaviconAssetsAsync(projectRoot, outputDir);\n\n  const devServer = devServerManager.getDefaultDevServer();\n  assert(devServer instanceof MetroBundlerDevServer);\n\n  const [resources, { manifest, renderAsync }] = await Promise.all([\n    devServer.getStaticResourcesAsync({ mode: 'production', minify, includeMaps }),\n    devServer.getStaticRenderFunctionAsync({\n      mode: 'production',\n      minify,\n    }),\n  ]);\n\n  debug('Routes:\\n', inspect(manifest, { colors: true, depth: null }));\n\n  const files = await getFilesToExportFromServerAsync(projectRoot, {\n    manifest,\n    async renderAsync(pathname: string) {\n      const template = await renderAsync(pathname);\n      let html = await devServer.composeResourcesWithHtml({\n        mode: 'production',\n        resources,\n        template,\n      });\n\n      if (injectFaviconTag) {\n        html = injectFaviconTag(html);\n      }\n\n      return html;\n    },\n  });\n\n  resources.forEach((resource) => {\n    files.set(\n      resource.filename,\n      modifyBundlesWithSourceMaps(resource.filename, resource.source, includeMaps)\n    );\n  });\n\n  fs.mkdirSync(path.join(outputDir), { recursive: true });\n\n  Log.log('');\n  Log.log(chalk.bold`Exporting ${files.size} files:`);\n  await Promise.all(\n    [...files.entries()]\n      .sort(([a], [b]) => a.localeCompare(b))\n      .map(async ([file, contents]) => {\n        const length = Buffer.byteLength(contents, 'utf8');\n        Log.log(file, chalk.gray`(${prettyBytes(length)})`);\n        const outputPath = path.join(outputDir, file);\n        await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });\n        await fs.promises.writeFile(outputPath, contents);\n      })\n  );\n  Log.log('');\n}\n\nexport function modifyBundlesWithSourceMaps(\n  filename: string,\n  source: string,\n  includeMaps: boolean\n): string {\n  if (filename.endsWith('.js')) {\n    // If the bundle ends with source map URLs then update them to point to the correct location.\n\n    // TODO: basePath support\n    const normalizedFilename = '/' + filename.replace(/^\\/+/, '');\n    //# sourceMappingURL=//localhost:8085/index.map?platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    //# sourceURL=http://localhost:8085/index.bundle//&platform=web&dev=false&hot=false&lazy=true&minify=true&resolver.environment=client&transform.environment=client&serializer.output=static\n    return source.replace(/^\\/\\/# (sourceMappingURL|sourceURL)=.*$/gm, (...props) => {\n      if (includeMaps) {\n        if (props[1] === 'sourceURL') {\n          return `//# ${props[1]}=` + normalizedFilename;\n        } else if (props[1] === 'sourceMappingURL') {\n          const mapName = normalizedFilename + '.map';\n          return `//# ${props[1]}=` + mapName;\n        }\n      }\n      return '';\n    });\n  }\n  return source;\n}\n\nexport function getHtmlFiles({ manifest }: { manifest: any }): string[] {\n  const htmlFiles = new Set<string>();\n\n  function traverseScreens(screens: string | { screens: any; path: string }, basePath = '') {\n    for (const value of Object.values(screens)) {\n      if (typeof value === 'string') {\n        let filePath = basePath + value;\n        if (value === '') {\n          filePath =\n            basePath === ''\n              ? 'index'\n              : basePath.endsWith('/')\n              ? basePath + 'index'\n              : basePath.slice(0, -1);\n        }\n        // TODO: Dedupe requests for alias routes.\n        addOptionalGroups(filePath);\n      } else if (typeof value === 'object' && value?.screens) {\n        const newPath = basePath + value.path + '/';\n        traverseScreens(value.screens, newPath);\n      }\n    }\n  }\n\n  function addOptionalGroups(path: string) {\n    const variations = getPathVariations(path);\n    for (const variation of variations) {\n      htmlFiles.add(variation);\n    }\n  }\n\n  traverseScreens(manifest.screens);\n\n  return Array.from(htmlFiles).map((value) => {\n    const parts = value.split('/');\n    // Replace `:foo` with `[foo]` and `*foo` with `[...foo]`\n    const partsWithGroups = parts.map((part) => {\n      if (part.startsWith(':')) {\n        return `[${part.slice(1)}]`;\n      } else if (part.startsWith('*')) {\n        return `[...${part.slice(1)}]`;\n      }\n      return part;\n    });\n    return partsWithGroups.join('/') + '.html';\n  });\n}\n\n// Given a route like `(foo)/bar/(baz)`, return all possible variations of the route.\n// e.g. `(foo)/bar/(baz)`, `(foo)/bar/baz`, `foo/bar/(baz)`, `foo/bar/baz`,\nexport function getPathVariations(routePath: string): string[] {\n  const variations = new Set<string>([routePath]);\n  const segments = routePath.split('/');\n\n  function generateVariations(segments: string[], index: number): void {\n    if (index >= segments.length) {\n      return;\n    }\n\n    const newSegments = [...segments];\n    while (\n      index < newSegments.length &&\n      matchGroupName(newSegments[index]) &&\n      newSegments.length > 1\n    ) {\n      newSegments.splice(index, 1);\n      variations.add(newSegments.join('/'));\n      generateVariations(newSegments, index + 1);\n    }\n\n    generateVariations(segments, index + 1);\n  }\n\n  generateVariations(segments, 0);\n\n  return Array.from(variations);\n}\n"],"names":["unstable_exportStaticAsync","getFilesToExportFromServerAsync","exportFromServerAsync","modifyBundlesWithSourceMaps","getHtmlFiles","getPathVariations","debug","require","projectRoot","options","Log","warn","learnMore","devServerManager","DevServerManager","minify","mode","location","startAsync","type","isExporting","stopAsync","matchGroupName","name","match","manifest","renderAsync","files","Map","Promise","all","map","outputPath","pathname","replace","set","data","e","logMetroErrorAsync","error","Error","outputDir","includeMaps","injectFaviconTag","getVirtualFaviconAssetsAsync","devServer","getDefaultDevServer","assert","MetroBundlerDevServer","resources","getStaticResourcesAsync","getStaticRenderFunctionAsync","inspect","colors","depth","template","html","composeResourcesWithHtml","forEach","resource","filename","source","fs","mkdirSync","path","join","recursive","log","chalk","bold","size","entries","sort","a","b","localeCompare","file","contents","length","Buffer","byteLength","gray","prettyBytes","promises","mkdir","dirname","writeFile","endsWith","normalizedFilename","props","mapName","htmlFiles","Set","traverseScreens","screens","basePath","value","Object","values","filePath","slice","addOptionalGroups","newPath","variations","variation","add","Array","from","parts","split","partsWithGroups","part","startsWith","routePath","segments","generateVariations","index","newSegments","splice"],"mappings":"AAMA;;;;QAmBsBA,0BAA0B,GAA1BA,0BAA0B;QAkC1BC,+BAA+B,GAA/BA,+BAA+B;QA+B/BC,qBAAqB,GAArBA,qBAAqB;QA+D3BC,2BAA2B,GAA3BA,2BAA2B;QA2B3BC,YAAY,GAAZA,YAAY;QAkDZC,iBAAiB,GAAjBA,iBAAiB;AAhOd,IAAA,OAAQ,kCAAR,QAAQ,EAAA;AACT,IAAA,MAAO,kCAAP,OAAO,EAAA;AACV,IAAA,GAAI,kCAAJ,IAAI,EAAA;AACF,IAAA,KAAM,kCAAN,MAAM,EAAA;AACC,IAAA,YAAc,kCAAd,cAAc,EAAA;AACd,IAAA,KAAM,WAAN,MAAM,CAAA;AAEe,IAAA,QAAW,WAAX,WAAW,CAAA;AACpC,IAAA,IAAQ,WAAR,QAAQ,CAAA;AACK,IAAA,iBAAkC,WAAlC,kCAAkC,CAAA;AAC7B,IAAA,sBAA6C,WAA7C,6CAA6C,CAAA;AAChD,IAAA,oBAA2C,WAA3C,2CAA2C,CAAA;AACpD,IAAA,KAAe,WAAf,eAAe,CAAA;;;;;;AAEzC,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,kCAAkC,CAAC,AAAsB,AAAC;AAKlF,eAAeP,0BAA0B,CAACQ,WAAmB,EAAEC,OAAgB,EAAE;IACtFC,IAAG,IAAA,CAACC,IAAI,CACN,CAAC,0CAA0C,CAAC,GAC1CC,CAAAA,GAAAA,KAAS,AAA4D,CAAA,UAA5D,CAAC,0DAA0D,CAAC,CACxE,CAAC;IAEF,sCAAsC;IACtC,MAAMC,gBAAgB,GAAG,IAAIC,iBAAgB,iBAAA,CAACN,WAAW,EAAE;QACzDO,MAAM,EAAEN,OAAO,CAACM,MAAM;QACtBC,IAAI,EAAE,YAAY;QAClBC,QAAQ,EAAE,EAAE;KACb,CAAC,AAAC;IACH,MAAMJ,gBAAgB,CAACK,UAAU,CAAC;QAChC;YACEC,IAAI,EAAE,OAAO;YACbV,OAAO,EAAE;gBACPQ,QAAQ,EAAE,EAAE;gBACZG,WAAW,EAAE,IAAI;aAClB;SACF;KACF,CAAC,CAAC;IAEH,IAAI;QACF,MAAMlB,qBAAqB,CAACM,WAAW,EAAEK,gBAAgB,EAAEJ,OAAO,CAAC,CAAC;KACrE,QAAS;QACR,MAAMI,gBAAgB,CAACQ,SAAS,EAAE,CAAC;KACpC;CACF;AAED,+BAA+B,CAC/B,SAASC,cAAc,CAACC,IAAY,EAAsB;QACjDA,GAA4B;IAAnC,OAAOA,CAAAA,GAA4B,GAA5BA,IAAI,CAACC,KAAK,kBAAkB,SAAK,GAAjCD,KAAAA,CAAiC,GAAjCA,GAA4B,AAAE,CAAC,CAAC,CAAC,CAAC;CAC1C;AAEM,eAAetB,+BAA+B,CACnDO,WAAmB,EACnB,EACEiB,QAAQ,CAAA,EACRC,WAAW,CAAA,EAIZ,EAC6B;IAC9B,kBAAkB;IAClB,MAAMC,KAAK,GAAG,IAAIC,GAAG,EAAkB,AAAC;IAExC,MAAMC,OAAO,CAACC,GAAG,CACf1B,YAAY,CAAC;QAAEqB,QAAQ;KAAE,CAAC,CAACM,GAAG,CAAC,OAAOC,UAAU,GAAK;QACnD,MAAMC,QAAQ,GAAGD,UAAU,CAACE,OAAO,sBAAsB,EAAE,CAAC,AAAC;QAC7D,IAAI;YACFP,KAAK,CAACQ,GAAG,CAACH,UAAU,EAAE,EAAE,CAAC,CAAC;YAC1B,MAAMI,IAAI,GAAG,MAAMV,WAAW,CAACO,QAAQ,CAAC,AAAC;YACzCN,KAAK,CAACQ,GAAG,CAACH,UAAU,EAAEI,IAAI,CAAC,CAAC;SAC7B,CAAC,OAAOC,CAAC,EAAO;YACf,MAAMC,CAAAA,GAAAA,oBAAkB,AAA2B,CAAA,mBAA3B,CAAC;gBAAEC,KAAK,EAAEF,CAAC;gBAAE7B,WAAW;aAAE,CAAC,CAAC;YACpD,MAAM,IAAIgC,KAAK,CAAC,qCAAqC,GAAGP,QAAQ,CAAC,CAAC;SACnE;KACF,CAAC,CACH,CAAC;IAEF,OAAON,KAAK,CAAC;CACd;AAGM,eAAezB,qBAAqB,CACzCM,WAAmB,EACnBK,gBAAkC,EAClC,EAAE4B,SAAS,CAAA,EAAE1B,MAAM,CAAA,EAAE2B,WAAW,CAAA,EAAW,EAC5B;IACf,MAAMC,gBAAgB,GAAG,MAAMC,CAAAA,GAAAA,QAA4B,AAAwB,CAAA,6BAAxB,CAACpC,WAAW,EAAEiC,SAAS,CAAC,AAAC;IAEpF,MAAMI,SAAS,GAAGhC,gBAAgB,CAACiC,mBAAmB,EAAE,AAAC;IACzDC,CAAAA,GAAAA,OAAM,AAA4C,CAAA,QAA5C,CAACF,SAAS,YAAYG,sBAAqB,sBAAA,CAAC,CAAC;IAEnD,MAAM,CAACC,SAAS,EAAE,EAAExB,QAAQ,CAAA,EAAEC,WAAW,CAAA,EAAE,CAAC,GAAG,MAAMG,OAAO,CAACC,GAAG,CAAC;QAC/De,SAAS,CAACK,uBAAuB,CAAC;YAAElC,IAAI,EAAE,YAAY;YAAED,MAAM;YAAE2B,WAAW;SAAE,CAAC;QAC9EG,SAAS,CAACM,4BAA4B,CAAC;YACrCnC,IAAI,EAAE,YAAY;YAClBD,MAAM;SACP,CAAC;KACH,CAAC,AAAC;IAEHT,KAAK,CAAC,WAAW,EAAE8C,CAAAA,GAAAA,KAAO,AAAyC,CAAA,QAAzC,CAAC3B,QAAQ,EAAE;QAAE4B,MAAM,EAAE,IAAI;QAAEC,KAAK,EAAE,IAAI;KAAE,CAAC,CAAC,CAAC;IAErE,MAAM3B,KAAK,GAAG,MAAM1B,+BAA+B,CAACO,WAAW,EAAE;QAC/DiB,QAAQ;QACR,MAAMC,WAAW,EAACO,QAAgB,EAAE;YAClC,MAAMsB,QAAQ,GAAG,MAAM7B,WAAW,CAACO,QAAQ,CAAC,AAAC;YAC7C,IAAIuB,IAAI,GAAG,MAAMX,SAAS,CAACY,wBAAwB,CAAC;gBAClDzC,IAAI,EAAE,YAAY;gBAClBiC,SAAS;gBACTM,QAAQ;aACT,CAAC,AAAC;YAEH,IAAIZ,gBAAgB,EAAE;gBACpBa,IAAI,GAAGb,gBAAgB,CAACa,IAAI,CAAC,CAAC;aAC/B;YAED,OAAOA,IAAI,CAAC;SACb;KACF,CAAC,AAAC;IAEHP,SAAS,CAACS,OAAO,CAAC,CAACC,QAAQ,GAAK;QAC9BhC,KAAK,CAACQ,GAAG,CACPwB,QAAQ,CAACC,QAAQ,EACjBzD,2BAA2B,CAACwD,QAAQ,CAACC,QAAQ,EAAED,QAAQ,CAACE,MAAM,EAAEnB,WAAW,CAAC,CAC7E,CAAC;KACH,CAAC,CAAC;IAEHoB,GAAE,QAAA,CAACC,SAAS,CAACC,KAAI,QAAA,CAACC,IAAI,CAACxB,SAAS,CAAC,EAAE;QAAEyB,SAAS,EAAE,IAAI;KAAE,CAAC,CAAC;IAExDxD,IAAG,IAAA,CAACyD,GAAG,CAAC,EAAE,CAAC,CAAC;IACZzD,IAAG,IAAA,CAACyD,GAAG,CAACC,MAAK,QAAA,CAACC,IAAI,CAAC,UAAU,EAAE1C,KAAK,CAAC2C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,MAAMzC,OAAO,CAACC,GAAG,CACf;WAAIH,KAAK,CAAC4C,OAAO,EAAE;KAAC,CACjBC,IAAI,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE,CAACC,CAAC,CAAC,GAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC;IAAA,CAAC,CACtC3C,GAAG,CAAC,OAAO,CAAC6C,IAAI,EAAEC,QAAQ,CAAC,GAAK;QAC/B,MAAMC,MAAM,GAAGC,MAAM,CAACC,UAAU,CAACH,QAAQ,EAAE,MAAM,CAAC,AAAC;QACnDnE,IAAG,IAAA,CAACyD,GAAG,CAACS,IAAI,EAAER,MAAK,QAAA,CAACa,IAAI,CAAC,CAAC,EAAEC,CAAAA,GAAAA,YAAW,AAAQ,CAAA,QAAR,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM9C,UAAU,GAAGgC,KAAI,QAAA,CAACC,IAAI,CAACxB,SAAS,EAAEmC,IAAI,CAAC,AAAC;QAC9C,MAAMd,GAAE,QAAA,CAACqB,QAAQ,CAACC,KAAK,CAACpB,KAAI,QAAA,CAACqB,OAAO,CAACrD,UAAU,CAAC,EAAE;YAAEkC,SAAS,EAAE,IAAI;SAAE,CAAC,CAAC;QACvE,MAAMJ,GAAE,QAAA,CAACqB,QAAQ,CAACG,SAAS,CAACtD,UAAU,EAAE6C,QAAQ,CAAC,CAAC;KACnD,CAAC,CACL,CAAC;IACFnE,IAAG,IAAA,CAACyD,GAAG,CAAC,EAAE,CAAC,CAAC;CACb;AAEM,SAAShE,2BAA2B,CACzCyD,QAAgB,EAChBC,MAAc,EACdnB,WAAoB,EACZ;IACR,IAAIkB,QAAQ,CAAC2B,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC5B,6FAA6F;QAE7F,yBAAyB;QACzB,MAAMC,kBAAkB,GAAG,GAAG,GAAG5B,QAAQ,CAAC1B,OAAO,SAAS,EAAE,CAAC,AAAC;QAC9D,wLAAwL;QACxL,2LAA2L;QAC3L,OAAO2B,MAAM,CAAC3B,OAAO,8CAA8C,CAAIuD,GAAAA,KAAK,GAAK;YAC/E,IAAI/C,WAAW,EAAE;gBACf,IAAI+C,KAAK,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;oBAC5B,OAAO,CAAC,IAAI,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,kBAAkB,CAAC;iBAChD,MAAM,IAAIC,KAAK,CAAC,CAAC,CAAC,KAAK,kBAAkB,EAAE;oBAC1C,MAAMC,OAAO,GAAGF,kBAAkB,GAAG,MAAM,AAAC;oBAC5C,OAAO,CAAC,IAAI,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGC,OAAO,CAAC;iBACrC;aACF;YACD,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;KACJ;IACD,OAAO7B,MAAM,CAAC;CACf;AAEM,SAASzD,YAAY,CAAC,EAAEqB,QAAQ,CAAA,EAAqB,EAAY;IACtE,MAAMkE,SAAS,GAAG,IAAIC,GAAG,EAAU,AAAC;IAEpC,SAASC,eAAe,CAACC,OAAgD,EAAEC,QAAQ,GAAG,EAAE,EAAE;QACxF,KAAK,MAAMC,KAAK,IAAIC,MAAM,CAACC,MAAM,CAACJ,OAAO,CAAC,CAAE;YAC1C,IAAI,OAAOE,KAAK,KAAK,QAAQ,EAAE;gBAC7B,IAAIG,QAAQ,GAAGJ,QAAQ,GAAGC,KAAK,AAAC;gBAChC,IAAIA,KAAK,KAAK,EAAE,EAAE;oBAChBG,QAAQ,GACNJ,QAAQ,KAAK,EAAE,GACX,OAAO,GACPA,QAAQ,CAACR,QAAQ,CAAC,GAAG,CAAC,GACtBQ,QAAQ,GAAG,OAAO,GAClBA,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;iBAC7B;gBACD,0CAA0C;gBAC1CC,iBAAiB,CAACF,QAAQ,CAAC,CAAC;aAC7B,MAAM,IAAI,OAAOH,KAAK,KAAK,QAAQ,IAAIA,CAAAA,KAAK,QAAS,GAAdA,KAAAA,CAAc,GAAdA,KAAK,CAAEF,OAAO,CAAA,EAAE;gBACtD,MAAMQ,OAAO,GAAGP,QAAQ,GAAGC,KAAK,CAAChC,IAAI,GAAG,GAAG,AAAC;gBAC5C6B,eAAe,CAACG,KAAK,CAACF,OAAO,EAAEQ,OAAO,CAAC,CAAC;aACzC;SACF;KACF;IAED,SAASD,iBAAiB,CAACrC,IAAY,EAAE;QACvC,MAAMuC,UAAU,GAAGlG,iBAAiB,CAAC2D,IAAI,CAAC,AAAC;QAC3C,KAAK,MAAMwC,SAAS,IAAID,UAAU,CAAE;YAClCZ,SAAS,CAACc,GAAG,CAACD,SAAS,CAAC,CAAC;SAC1B;KACF;IAEDX,eAAe,CAACpE,QAAQ,CAACqE,OAAO,CAAC,CAAC;IAElC,OAAOY,KAAK,CAACC,IAAI,CAAChB,SAAS,CAAC,CAAC5D,GAAG,CAAC,CAACiE,KAAK,GAAK;QAC1C,MAAMY,KAAK,GAAGZ,KAAK,CAACa,KAAK,CAAC,GAAG,CAAC,AAAC;QAC/B,yDAAyD;QACzD,MAAMC,eAAe,GAAGF,KAAK,CAAC7E,GAAG,CAAC,CAACgF,IAAI,GAAK;YAC1C,IAAIA,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;gBACxB,OAAO,CAAC,CAAC,EAAED,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7B,MAAM,IAAIW,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,EAAED,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAChC;YACD,OAAOW,IAAI,CAAC;SACb,CAAC,AAAC;QACH,OAAOD,eAAe,CAAC7C,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;KAC5C,CAAC,CAAC;CACJ;AAIM,SAAS5D,iBAAiB,CAAC4G,SAAiB,EAAY;IAC7D,MAAMV,UAAU,GAAG,IAAIX,GAAG,CAAS;QAACqB,SAAS;KAAC,CAAC,AAAC;IAChD,MAAMC,SAAQ,GAAGD,SAAS,CAACJ,KAAK,CAAC,GAAG,CAAC,AAAC;IAEtC,SAASM,kBAAkB,CAACD,QAAkB,EAAEE,KAAa,EAAQ;QACnE,IAAIA,KAAK,IAAIF,QAAQ,CAACpC,MAAM,EAAE;YAC5B,OAAO;SACR;QAED,MAAMuC,WAAW,GAAG;eAAIH,QAAQ;SAAC,AAAC;QAClC,MACEE,KAAK,GAAGC,WAAW,CAACvC,MAAM,IAC1BxD,cAAc,CAAC+F,WAAW,CAACD,KAAK,CAAC,CAAC,IAClCC,WAAW,CAACvC,MAAM,GAAG,CAAC,CACtB;YACAuC,WAAW,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC;YAC7Bb,UAAU,CAACE,GAAG,CAACY,WAAW,CAACpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACtCkD,kBAAkB,CAACE,WAAW,EAAED,KAAK,GAAG,CAAC,CAAC,CAAC;SAC5C;QAEDD,kBAAkB,CAACD,QAAQ,EAAEE,KAAK,GAAG,CAAC,CAAC,CAAC;KACzC;IAEDD,kBAAkB,CAACD,SAAQ,EAAE,CAAC,CAAC,CAAC;IAEhC,OAAOR,KAAK,CAACC,IAAI,CAACJ,UAAU,CAAC,CAAC;CAC/B"}